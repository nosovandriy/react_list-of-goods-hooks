{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,6DAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAkCC,IAAMC,UAAkB,GAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,IAAMC,UAAkB,GAA5D,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCL,IAAMC,SAAmBJ,EAASS,MAAlE,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA9BR,SACEC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQN,GACN,KAAKV,EAASiB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAISb,EAClBK,EAAaS,UACbT,EAUiBU,CAAkBrB,EAAiBS,EAAUH,GAiBlE,OACE,qBAAKgB,UAAU,MAAf,SACIlB,EASE,qCACE,wBACEmB,KAAK,SACLC,QA7BM,WAChBjB,GAAc,GACdG,EAAYX,EAASiB,WAyBb,iCAOA,wBACEO,KAAK,SACLC,QA/BS,WACnBjB,GAAc,GACdG,EAAYX,EAASmB,SA2Bb,4BAOA,wBACEK,KAAK,SACLC,QAAS,kBAAMjB,GAAeD,IAFhC,qBAOA,wBACEiB,KAAK,SACLC,QAxCa,WACvBjB,GAAc,GACdG,EAAYX,EAASS,OAoCb,mBAOA,oBAAIc,UAAU,QAAd,SACGX,EAAac,KAAI,SAACC,GAAD,OAChB,6BACGA,GADMA,WAtCf,wBACEH,KAAK,SACLC,QAAS,kBAAMnB,GAAa,IAF9B,sBCvEVsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea4be8c9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  const reverseResult = isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n\n  return reverseResult;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = React.useState<boolean>(false);\n  const [isReversed, setIsReversed] = React.useState<boolean>(false);\n  const [sortType, setSortType] = React.useState<SortType>(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const sortByAbc = () => {\n    setIsReversed(false);\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setIsReversed(false);\n    setSortType(SortType.LENGTH);\n  };\n\n  const resetSortReverse = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => setIsStarted(true)}\n          >\n            Start\n          </button>\n        ) : (\n          <>\n            <button\n              type=\"button\"\n              onClick={sortByAbc}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={resetSortReverse}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map((good) => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}